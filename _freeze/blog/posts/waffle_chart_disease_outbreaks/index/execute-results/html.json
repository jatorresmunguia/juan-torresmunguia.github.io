{
  "hash": "6901add901129c0d8a4ab74234e618eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A waffle chart of disease outbreaks in the world\"\nsubtitle: \"Using {ggplot} in R to create a waffle chart to visualize disease outbreaks in the world\"\nauthor: \n - name: \n    given: Juan Armando \n    family: Torres Munguía\ndate: \"2025-01-12\"\ncategories: \n - data visualization\n - disease outbreaks\n - epidemics\n - pandemics\n - tidyverse\n - ggplot\n - waffle chart\nimage: \"waffle-pandemics.png\"\ntitle-block-banner: false\ncitation: true\nexecute: \n  freeze: true\nformat: \n  html: \n    page-layout: article\ncomments:\n  utterances: \n    repo: jatorresmunguia/juan-torresmunguia.github.io\n---\n\n\n## Overview\nIn these notes, I will show you how to use `ggplot` to create a waffle chart about the frequency of disease outbreaks in the world. The final output will look like this:\n\n![](waffle-pandemics.png){width=100% style=\"margin-top: 0px; margin-bottom: 0px;\"}\n\n## About the data\nThe source of information is the global dataset of pandemic- and epidemic-prone disease outbreaks, whose data is freely available at the <a href=\"https://github.com/jatorresmunguia/disease_outbreak_news\" target=\"_blank\">GitHub repository</a> of the **disease outbreaks project**. \n\nThe unit of analysis in the database is an outbreak, defined as the occurrence of at least one case of a specific disease in a country -or territory- during a particular year. Therefore, a country -or territory- cannot have more than one outbreak of the same disease in the same year, although it may experience outbreaks of different diseases within the same year. A country can only have multiple outbreaks of the same disease if they occur in different years.\n\nThe dataset includes information on over 3,000 pandemic- and epidemic-prone disease outbreaks associated with more than 80 different infectious diseases, occurring globally from January 1996 to the present.\n\nThe dataset of pandemic- and epidemic-prone disease outbreaks is also part of the [Humanitarian Data Exchange](https://data.humdata.org/) coordinated by the United Nations Office for the Coordination of Humanitarian Affairs (OCHA).\n\n## Set-up\nTo create the waffle chart, we will use the following R packages:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Tidy data analysis framework\nlibrary(readxl) # Read Excel files\nlibrary(httr) # Perform HTTP requests\nlibrary(showtext) # Add custom fonts to plots\nlibrary(ggtext) # Use rich text elements in ggplot\nlibrary(waffle) # Create waffle charts\n```\n:::\n\n\n## Loading data from GitHub\nThe dataset is stored in an Excel. We will download it from the [GitHub repository](https://github.com/jatorresmunguia/disease_outbreak_news/raw/refs/heads/main/Humanitarian%20Data%20Exchange/data_2_share/disease_outbreaks_HDX.xlsx) and load it into R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the GitHub raw content URL\nlink_data <- \"https://github.com/jatorresmunguia/disease_outbreak_news/raw/refs/heads/main/Humanitarian%20Data%20Exchange/data_2_share/disease_outbreaks_HDX.xlsx\"\n\n# Create a temporary file to store the data\ntemp <- tempfile(fileext = \".xlsx\")\n\n# Download the data from GitHub using authentication\nget_req <- GET(link_data, \n               authenticate(Sys.getenv(\"GITHUB_PAT\"), \"\"),\n               write_disk(path = temp))\n\n# Read the Excel file into R\noutbreaks <- read_excel(temp)\n```\n:::\n\n\n### Data wrangling\nWe will group the data by year and disease, and then filter the top 10 diseases from 1996 to 2024. We will also group the data by year and disease, and then filter the top 10 diseases from 2015 to 2024. Finally, we will create a factor variable for the top 10 diseases and the \"Other\" category:\n\n::: {.cell}\n\n```{.r .cell-code}\n# Top 10 diseases 1996-2024\ntop_10_icd104n <- outbreaks |>\n  filter(Year < 2025) |> \n  group_by(icd104n) |>\n  summarise(freq = n(), .groups = \"drop\") |>\n  arrange(-freq) |>\n  slice_head(n = 10)\n\n# Only top-10 categories and Others\noutbreaks_year_disease_grouped <- outbreaks |>\n  filter(Year < 2025 & Year > 2014) |> \n  mutate(icd104n = ifelse(icd104n %in% top_10_icd104n$icd104n, icd104n, \"Other\")) |> # Group the diseases\n  group_by(Year, icd104n) |>\n  summarise(freq = n(), .groups = \"drop\") |> # Count the number of outbreaks\n  arrange(-freq)\n\n# Create a factor variable for the top 10 diseases and the \"Other\" category\noutbreaks_year_disease_grouped <- outbreaks_year_disease_grouped |>\n  mutate(icd104n = factor(icd104n, \n                          levels = c(\"Acute poliomyelitis, unspecified\", \"Classical cholera\", \"COVID-19, virus identified\", \n                                     \"Dengue, unspecified\", \"Influenza due to identified zoonotic or pandemic influenza virus\", \"Measles\",\n                                     \"Meningococcal meningitis\", \"Middle East respiratory syndrome coronavirus [MERS-CoV]\",  \"Monkeypox\",\n                                     \"Yellow fever, unspecified\", \"Other\"), \n                          labels = c(\"Acute poliomyelitis\", \"Cholera\", \"COVID-19\", \"Dengue\", \"Influenza\", \n                                     \"Measles\", \"Meningococcal meningitis\", \"MERS-CoV\",  \"Monkeypox\",\n                                     \"Yellow fever\", \"Other\")))\n```\n:::\n\n\n## Set theme settings and define fonts, colors, and text to be used in the waffle chart\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom theme for the waffle chart\ntheme_waffle_chart <- function() {\n  theme_minimal(\n    base_family = \"Roboto Condensed\" # Base theme with custom font\n  ) + \n    # Custom theme settings\n    theme(\n      # Axis settings\n      axis.title = element_blank(), # Remove axis title\n      axis.line = element_blank(), # Remove axis line\n      \n      # Title settings\n      plot.title.position = \"plot\", # Position of the title\n      plot.title = element_textbox(color = \"black\",\n                                   face = \"bold\", \n                                   size = 24, \n                                   margin = margin(5, 0, 5, 0), # Top, right, bottom, left\n                                   width = unit(1, \"npc\") # Width of the title, npc == 1 corresponds to the full width of the plot\n      ),\n      \n      # Subtitle settings\n      plot.subtitle = element_textbox(color = \"grey50\", \n                                      face = \"bold\", \n                                      size = 14, \n                                      margin = margin(0, 0, 10, 0),\n                                      width = unit(1, \"npc\")\n      ),\n      \n      # Legend settings\n      legend.position = \"top\",\n      legend.title = element_blank(),\n      legend.key.height = unit(0.5, 'cm'), # Height of the legend key\n      legend.key.width = unit(0.5, 'cm'), # Width of the legend key\n      legend.spacing.x = unit(0.2, \"cm\"), \n      legend.key.spacing = unit(0.5, 'cm'), # Spacing between legend keys\n      legend.text = element_text(margin = margin(5, 0, 5, 0), \n                                 face = \"bold\",\n                                 color = \"grey10\",\n                                 size = 10),\n      legend.direction = \"horizontal\",\n      legend.byrow = FALSE,\n\n      # Caption settings\n      plot.caption = element_textbox(color = \"grey70\", \n                                     face = \"italic\", \n                                     size = 12, \n                                     margin = margin(10, 0, 5, 0),\n                                     width = unit(1, \"npc\")\n      ),\n      plot.background = element_rect(color = \"white\", \n                                     fill = \"white\"),\n      plot.margin = margin(20, 40, 20, 40)\n    )\n}\n\n# Title, subtitle, and caption for the waffle chart\ntitle_chart <- \"Pandemic- and epidemic-prone disease outbreaks in the world\"\nsubtitle_chart <- \"In 2024, fewer countries reported public health events linked to COVID-19, while outbreaks of viral diseases transmitted by vectors increased\"\ncaption_chart <- \"Data: A global dataset of pandemic- and epidemic-prone disease outbreaks (DOI: 10.1038/s41597-022-01797-2) | Graphic: Juan Torres Munguía\"\n\n# Define the colors to be used in the waffle chart\ncolors <- c(\"#B66DFF\", \"#7e0021\", \"#ff420e\", \"#579d1c\", \"#83caff\", \n            \"#0084d1\", \"#aecf00\", \"#4b1f6f\", \"#FF86FF\", \"#ffd320\", \"grey80\") \n```\n:::\n\n\n## Create the waffle chart\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(outbreaks_year_disease_grouped, \n       aes(fill = icd104n, values = freq)) +\n  geom_waffle(size = 0.25, # Size of the waffle squares\n              n_rows = 10, # Number of rows in the waffle chart\n              flip = TRUE, # Flip the waffle chart\n              color = \"white\", # Color of the border of the waffle squares  \n              make_proportional = FALSE) + # Do not make the waffle chart proportional\n  facet_wrap(~ Year, # Facet the waffle chart by year\n             nrow = 1, \n             strip.position = \"bottom\") + # Position of the facet strip\n  scale_fill_manual(values = colors) +\n  scale_x_discrete() +\n  scale_y_continuous(labels = function(x) x * 10, \n                     expand = c(0, 0)) + # Expand the y-axis\n  coord_equal() +\n  labs(title = title_chart,\n       subtitle = subtitle_chart,\n       caption = caption_chart,\n       x = \"\",\n       y = \"Total number of outbreaks\",\n       fill = \"\") +\n  guides(fill = guide_legend(nrow = 2)) + # Number of rows in the legend\n  theme_waffle_chart() \n```\n:::\n\n\n## Save the waffle chart as an image\n\n::: {.cell}\n\n```{.r .cell-code}\nshowtext_opts(dpi = 320) # Set the resolution of the image 320 dpi is for high-quality images (\"retina\")\nggsave(\n  \"waffle-pandemics.png\",\n  dpi = 320, \n  width = 12, \n  height = 9,\n  units = \"in\"\n)\nshowtext_auto(FALSE) \n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}